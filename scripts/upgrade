#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
is_public=$(ynh_app_setting_get $app is_public)
final_path=$(ynh_app_setting_get $app final_path)

#=================================================
# FIX OLD THINGS
#=================================================

if [ "$is_public" = "Yes" ]; then
	ynh_app_setting_set $app is_public 1	# Fixe is_public en booléen
	is_public=1
elif [ "$is_public" = "No" ]; then
	ynh_app_setting_set $app is_public 0
	is_public=0
fi

if [ -z $final_path ]; then	# Si final_path n'est pas renseigné dans app setting
	final_path="/opt/yunohost/$app"
	ynh_app_setting_set $app final_path $final_path
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

BACKUP_BEFORE_UPGRADE	# Backup the current version of the app
ynh_clean_setup () {
	BACKUP_FAIL_UPGRADE	# restore it if the upgrade fails
}
ynh_abort_if_errors	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# CHECK THE PATH
#=================================================

path_url=$(ynh_normalize_url_path $path_url)	# Vérifie et corrige la syntaxe du path.

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_setup_source "$final_path"	# Télécharge la source, décompresse et copie dans $final_path

#=================================================
# NGINX CONFIGURATION
#=================================================

ynh_nginx_config
if [ "$path_url" = "/" ]
then
	ynh_replace_string "__PATH_NO_ROOT__" "" /etc/nginx/conf.d/$domain.d/$app.conf
	sudo sed --in-place '/#noroot*/d' /etc/nginx/conf.d/$domain.d/$app.conf
else
	ynh_replace_string "#noroot" "" /etc/nginx/conf.d/$domain.d/$app.conf
	ynh_replace_string "__PATH_NO_ROOT__" "$path_url" /etc/nginx/conf.d/$domain.d/$app.conf
fi
ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app	# Create the dedicated user, if not exist

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPGRADE SEARX IN ITS VIRTUALENV
#=================================================

sudo virtualenv --system-site-packages "$final_path"
sudo bash -c "source $final_path/bin/activate && pip install --requirement $final_path/requirements-ynh.txt --upgrade"

#=================================================
# CONFIGURE SEARX
#=================================================

# Créé un backup du fichier de config si il a été modifié.
ynh_backup_if_checksum_is_different "$final_path/searx/settings.yml"

sudo cp ../conf/settings.yml "$final_path/searx/"

# Generate a secret key
ynh_replace_string "__SECRETKEY__" "$(ynh_string_random)" "$final_path/searx/settings.yml"

# Modify the base_url parameter, if it's installed in a subpath
if [ "$path_url" != "/" ]
then
	ynh_replace_string "__BASEURL__" "https://${domain}${path_url}/" "$final_path/searx/settings.yml"
else
	ynh_replace_string "__BASEURL__" "False" "$final_path/searx/settings.yml"
fi
ynh_store_file_checksum "$final_path/searx/settings.yml"

#=================================================
# GENERIC FINALISATION
#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

sudo chown $app: --recursive "$final_path"

#=================================================
# CONFIGURE UWSGI FOR SEARX
#=================================================

sudo cp ../conf/searx.ini /etc/uwsgi/apps-available/$app.ini
ynh_replace_string "__APP__" "$app" /etc/uwsgi/apps-available/$app.ini
ynh_replace_string "__FINALPATH__" "$final_path" /etc/uwsgi/apps-available/$app.ini
sudo systemctl restart uwsgi

#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 1 ]
then
	ynh_app_setting_set $app skipped_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

sudo systemctl reload nginx
