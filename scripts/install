#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_abort_if_errors	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

path_url=$(ynh_normalize_url_path $path_url)	# Vérifie et corrige la syntaxe du path.
CHECK_DOMAINPATH	# Vérifie la disponibilité du path et du domaine.
# Check final_path
final_path="/opt/yunohost/$app"
test ! -e "$final_path" || ynh_die "This path already contains a folder"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app is_public $is_public

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies git build-essential libxslt-dev python-dev python-virtualenv virtualenv python-pybabel zlib1g-dev libffi-dev libssl-dev python-lxml uwsgi uwsgi-plugin-python

#=================================================
# NGINX CONFIGURATION
#=================================================

ynh_nginx_config
if [ "$path_url" = "/" ]
then
	ynh_replace_string "__PATH_NO_ROOT__" "" /etc/nginx/conf.d/$domain.d/$app.conf
	sudo sed --in-place '/#noroot*/d' /etc/nginx/conf.d/$domain.d/$app.conf
else
	ynh_replace_string "#noroot" "" /etc/nginx/conf.d/$domain.d/$app.conf
	ynh_replace_string "__PATH_NO_ROOT__" "$path_url" /etc/nginx/conf.d/$domain.d/$app.conf
fi
ynh_store_checksum_config "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app	# Créer un utilisateur système dédié à l'app

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path $final_path
ynh_setup_source	# Télécharge la source, décompresse et copie dans $final_path

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL SEARX IN A VIRTUALENV
#=================================================

sudo virtualenv --system-site-packages "$final_path"
sudo bash -c "source $final_path/bin/activate && pip install --requirement $final_path/requirements-ynh.txt"

#=================================================
# CONFIGURE SEARX
#=================================================

sudo cp ../conf/settings.yml "$final_path/searx/"

# Generate a secret key
ynh_replace_string "__SECRETKEY__" "$(ynh_string_random)" "$final_path/searx/settings.yml"

# Modify the base_url parameter, if it's installed in a subpath
if [ "$path_url" != "/" ]
then
	ynh_replace_string "__BASEURL__" "https://${domain}${path_url}/" "$final_path/searx/settings.yml"
else
	ynh_replace_string "__BASEURL__" "False" "$final_path/searx/settings.yml"
fi
ynh_store_checksum_config "$final_path/searx/settings.yml"

#=================================================
# SET PERMISSIONS ON SEARX DIRECTORY
#=================================================

sudo chown $app: --recursive "$final_path"

#=================================================
# CONFIGURE UWSGI FOR SEARX
#=================================================

sudo cp ../conf/searx.ini /etc/uwsgi/apps-available/$app.ini
ynh_replace_string "__APP__" "$app" /etc/uwsgi/apps-available/$app.ini
ynh_replace_string "__FINALPATH__" "$final_path" /etc/uwsgi/apps-available/$app.ini
sudo ln -s /etc/uwsgi/apps-available/$app.ini /etc/uwsgi/apps-enabled/$app.ini

#=================================================
# ENABLE UWSGI SERVICE IN ADMIN PANEL
#=================================================

sudo systemctl restart uwsgi
# Ajoute le service au monitoring de Yunohost.
sudo yunohost service add uwsgi --log "/var/log/uwsgi/app/$app.log"

#=================================================
# GENERIC FINALISATION
#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 1 ]
then
	ynh_app_setting_set $app skipped_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

sudo systemctl reload nginx
